import java.io.*;
import java.util.*;

public class EmployeeManager {

    public static void main(String[] args) {

        if (args.length == 0) {
            System.out.println("No arguments provided. Please provide a valid argument.");
            return;
        }

        switch (args[0].charAt(0)) {
            case 'l':
                listEmployees();
                break;
            case 's':
                showRandomEmployee();
                break;
            case '+':
                addEmployee(args[0].substring(1));
                break;
            case '?':
                searchEmployee(args[0].substring(1));
                break;
            case 'c':
                countWords();
                break;
            case 'u':
                updateEmployee(args[0].substring(1));
                break;
            case 'd':
                deleteEmployee(args[0].substring(1));
                break;
            default:
                System.out.println("Invalid argument. Please use l, s, +, ?, c, u, or d.");
                break;
        }
    }

    private static void listEmployees() {
        System.out.println("Loading data...");
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("employees.txt")))) {
            String line = reader.readLine();
            if (line != null) {
                String[] employees = line.split(",");
                for (String emp : employees) {
                    System.out.println(emp.trim());
                }
            }
        } catch (Exception e) {
            System.out.println("An error occurred while reading the file.");
        }
        System.out.println("Data Loaded.");
    }

    private static void showRandomEmployee() {
        System.out.println("Loading data...");
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("employees.txt")))) {
            String line = reader.readLine();
            if (line != null) {
                String[] employees = line.split(",");
                Random rand = new Random();
                int index = rand.nextInt(employees.length);
                System.out.println(employees[index].trim());
            }
        } catch (Exception e) {
            System.out.println("An error occurred while reading the file.");
        }
        System.out.println("Data Loaded.");
    }

    private static void addEmployee(String newEmployee) {
        System.out.println("Loading data...");
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("employees.txt", true))) {
            writer.write(", " + newEmployee);
        } catch (Exception e) {
            System.out.println("An error occurred while writing to the file.");
        }
        System.out.println("Data Loaded.");
    }

    private static void searchEmployee(String name) {
        System.out.println("Loading data...");
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("employees.txt")))) {
            String line = reader.readLine();
            if (line != null) {
                String[] employees = line.split(",");
                boolean found = Arrays.asList(employees).contains(name);
                if (found) {
                    System.out.println("Employee found!");
                } else {
                    System.out.println("Employee not found.");
                }
            }
        } catch (Exception e) {
            System.out.println("An error occurred while reading the file.");
        }
        System.out.println("Data Loaded.");
    }

    private static void countWords() {
        System.out.println("Loading data...");
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("employees.txt")))) {
            String line = reader.readLine();
            if (line != null) {
                int wordCount = line.split("\\s+").length;
                System.out.println(wordCount + " word(s) found.");
            }
        } catch (Exception e) {
            System.out.println("An error occurred while reading the file.");
        }
        System.out.println("Data Loaded.");
    }

    private static void updateEmployee(String oldEmployee) {
        System.out.println("Loading data...");
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("employees.txt")))) {
            String line = reader.readLine();
            if (line != null) {
                String[] employees = line.split(",");
                for (int i = 0; i < employees.length; i++) {
                    if (employees[i].trim().equals(oldEmployee)) {
                        employees[i] = "Updated";
                    }
                }
                writeToFile(String.join(",", employees));
            }
        } catch (Exception e) {
            System.out.println("An error occurred while updating the file.");
        }
        System.out.println("Data Updated.");
    }

    private static void deleteEmployee(String employee) {
        System.out.println("Loading data...");
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("employees.txt")))) {
            String line = reader.readLine();
            if (line != null) {
                List<String> employees = new ArrayList<>(Arrays.asList(line.split(",")));
                employees.remove(employee.trim());
                writeToFile(String.join(",", employees));
            }
        } catch (Exception e) {
            System.out.println("An error occurred while deleting from the file.");
        }
        System.out.println("Data Deleted.");
    }

    private static void writeToFile(String data) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("employees.txt"))) {
            writer.write(data);
        } catch (Exception e) {
            System.out.println("An error occurred while writing to the file.");
        }
    }
}
